package client;

import com.google.gson.Gson;

import java.io.*;
import java.net.Socket;

public class GameClient {
    private static final String SERVER_ADDRESS = "localhost"; // 서버 주소
    private static final int PORT = 12345;

    public static void main(String[] args) {
        try (Socket socket = new Socket(SERVER_ADDRESS, PORT);
             BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
             PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
             BufferedReader userInput = new BufferedReader(new InputStreamReader(System.in))) {

            System.out.println("서버에 연결되었습니다!");

            // 서버에서 게임 상태 수신 스레드
            new Thread(() -> {
                try {
                    Gson gson = new Gson();
                    String serverMessage;
                    while ((serverMessage = in.readLine()) != null) {
                        // 서버에서 JSON으로 전송된 게임 상태를 파싱
                        GameState gameState = gson.fromJson(serverMessage, GameState.class);
                        System.out.println("게임 상태 업데이트: " +
                                "왼쪽 성 체력 = " + gameState.getLeftCastleHp() +
                                ", 오른쪽 성 체력 = " + gameState.getRightCastleHp());
                    }
                } catch (IOException e) {
                    System.out.println("서버와의 연결이 끊어졌습니다.");
                }
            }).start();

            // 사용자 입력을 받아 서버로 전송
            Gson gson = new Gson();
            while (true) {
                System.out.print("명령 입력 (SPAWN/MOVE/ATTACK): ");
                String command = userInput.readLine();

                // 클라이언트 명령에 대한 데이터 생성
                GameData dataToSend = new GameData(command, "Marine"); // 기본 유닛 타입 Marine
                String jsonData = gson.toJson(dataToSend); // JSON으로 변환

                // 서버로 데이터 전송
                out.println(jsonData);
                out.flush();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

// 클라이언트에서 서버로 전송할 데이터 클래스
class GameData {
    private String command;
    private String unitType;

    public GameData(String command, String unitType) {
        this.command = command;
        this.unitType = unitType;
    }

    // Getters and Setters
    public String getCommand() {
        return command;
    }

    public void setCommand(String command) {
        this.command = command;
    }

    public String getUnitType() {
        return unitType;
    }

    public void setUnitType(String unitType) {
        this.unitType = unitType;
    }
}

// 게임 상태를 표현하는 클래스
class GameState {
    private int leftCastleHp;
    private int rightCastleHp;

    public int getLeftCastleHp() {
        return leftCastleHp;
    }

    public void setLeftCastleHp(int leftCastleHp) {
        this.leftCastleHp = leftCastleHp;
    }

    public int getRightCastleHp() {
        return rightCastleHp;
    }

    public void setRightCastleHp(int rightCastleHp) {
        this.rightCastleHp = rightCastleHp;
    }
}
