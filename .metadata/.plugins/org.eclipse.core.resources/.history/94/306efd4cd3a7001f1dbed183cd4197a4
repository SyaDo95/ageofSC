package server;

import java.io.*;
import java.net.*;

public class GameServer {
    private static final int PORT = 12345;

    public static void main(String[] args) {
        System.out.println("서버가 시작되었습니다...");

        try (ServerSocket serverSocket = new ServerSocket(PORT)) {
            while (true) {
                System.out.println("클라이언트 대기 중...");
                Socket clientSocket = serverSocket.accept();
                System.out.println("클라이언트 연결됨: " + clientSocket.getInetAddress());

                // 새로운 스레드에서 클라이언트와 통신 처리
                new Thread(new ClientHandler(clientSocket)).start();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

// 클라이언트와 통신 처리
class ClientHandler implements Runnable {
    private Socket socket;

    public ClientHandler(Socket socket) {
        this.socket = socket;
    }

    @Override
    public void run() {
        try (
            ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
            ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
        ) {
            while (true) {
                // 클라이언트로부터 데이터 수신
                GameData receivedData = (GameData) in.readObject();
                System.out.println("클라이언트로부터 데이터: " + receivedData.getCommand());

                // 처리 후 응답 데이터 생성
                GameData responseData = new GameData(
                    "ACK", // 응답 명령
                    receivedData.getUnitType(),
                    receivedData.getUnitX(),
                    receivedData.getUnitY(),
                    receivedData.getFortressHp()
                );

                // 클라이언트로 데이터 전송
                out.writeObject(responseData);
                out.flush();
            }
        } catch (IOException | ClassNotFoundException e) {
            System.out.println("클라이언트 연결 끊김");
        }
    }
}
