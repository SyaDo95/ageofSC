package server;

import java.io.*;
import java.net.*;
import java.util.UUID;

import ageOfStarcraft.GameWindow;

public class GameClient {
    private GameWindow gameWindow;
    private ObjectOutputStream out;
    private ObjectInputStream in;
    private String playerRole;

    public GameClient(String serverAddress, int serverPort) {
        try {
            Socket socket = new Socket(serverAddress, serverPort);
            out = new ObjectOutputStream(socket.getOutputStream());
            in = new ObjectInputStream(socket.getInputStream());

            // 서버에서 수신된 데이터 처리
            new Thread(() -> {
                try {
                    while (true) {
                        GameAction action = (GameAction) in.readObject();
                        handleServerAction(action);
                    }
                } catch (IOException | ClassNotFoundException e) {
                    e.printStackTrace();
                }
            }).start();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void setGameWindow(GameWindow gameWindow) {
        this.gameWindow = gameWindow;
    }
    
    public int getSpawnX() {
        if ("LEFT".equals(playerRole)) {
            return 100; // 왼쪽 플레이어의 스폰 X좌표 (예: 왼쪽 건물 옆)
        } else if ("RIGHT".equals(playerRole)) {
            return 900; // 오른쪽 플레이어의 스폰 X좌표 (예: 오른쪽 건물 옆)
        } else {
            return 0; // 기본값
        }
    }

    public void sendAction(GameAction action) {
        try {
            out.writeObject(action);
            out.flush();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    public void sendUnitUpdate(UnitState unitState) {
        sendAction(new GameAction("UNIT_UPDATE", unitState, playerRole));
    }

    public void sendSCVSpawnRequest() {
        int spawnX = playerRole.equals("LEFT") ? 100 : 900; // 스폰 위치
        String unitId = UUID.randomUUID().toString();
        UnitState state = new UnitState("SCV", playerRole, spawnX, 370, 60); // 유닛 상태 생성

        System.out.println("[GameClient] SCV 생성 요청 준비 완료: " + state); // 로그 추가
        sendAction(new GameAction("SPAWN_UNIT", state, playerRole)); // 서버로 요청 전송
        System.out.println("[GameClient] SCV 생성 요청 전송됨: " + state); // 로그 추가
    }



    private void handleServerAction(GameAction action) {
    	System.out.println("handleServerAction 실행됨: " + action.getActionType());
        switch (action.getActionType()) {
            case "ASSIGN_ROLE":
                playerRole = action.getPlayerId();
                gameWindow.setPlayerRole(playerRole);
                System.out.println("Received action from server: " + action);
                break;
            case "UNIT_UPDATE":
                System.out.println("Received UNIT_UPDATE: " + action.getUnitState());
                gameWindow.updateUnitState(action.getUnitState());
                break;
            case "SPAWN_UNIT":
                System.out.println("서버로부터 SCV 생성 상태 수신: " + action.getUnitState());
                gameWindow.spawnUnitFromServer(action.getUnitState());
                break;
            case "BUILDING_UPDATE":
                gameWindow.updateBuildingState(action.getUnitState());
                break;
            default:
                System.out.println("Unhandled action type: " + action.getActionType());
                break;
        }
    }

    
    public String getPlayerRole() {
        return playerRole;
    }
    public static void main(String[] args) {
        GameClient client = new GameClient("localhost", 12345);
        GameWindow window = new GameWindow(client); // GameWindow에 클라이언트 전달
        client.setGameWindow(window); // GameClient에 GameWindow 설정
        window.setVisible(true);
    }

}

